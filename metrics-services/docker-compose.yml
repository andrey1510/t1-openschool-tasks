networks:
  metrics-network:
    driver: bridge

services:

  zookeeper:
    container_name: zookeeper-metrics
    image: confluentinc/cp-zookeeper:latest
    networks:
      - metrics-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 21181:2181

  kafka:
    container_name: kafka-metrics
    image: confluentinc/cp-kafka:latest
    networks:
      - metrics-network
    depends_on:
      - zookeeper
    ports:
      - 29292:29292
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29292
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui-metrics
    image: provectuslabs/kafka-ui:latest
    networks:
      - metrics-network
    ports:
      - 18181:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: metrics
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: true

  metrics-consumer-app:
    container_name: metrics-consumer
    build:
      context: ./metrics-consumer
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TESTS=true
    networks:
      - metrics-network
    environment:
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://metrics-consumer-db:5432/metricsbase
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - 8866:8866
    depends_on:
      - metrics-consumer-db
    restart: unless-stopped

  metrics-consumer-db:
    container_name: metrics-db
    image: postgres:15
    networks:
      - metrics-network
    environment:
      - POSTGRES_DB=metricsbase
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - 26262:5432
    restart: unless-stopped

  metrics-producer-app:
    container_name: metrics-producer
    build:
      context: ./metrics-producer
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TESTS=true
    networks:
      - metrics-network
    environment:
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS=kafka:9092
    ports:
      - 8865:8865
    restart: unless-stopped
